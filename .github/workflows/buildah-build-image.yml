name: buildah-build-image
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/buildah-build-image.yml # Self-trigger
      - containers/test-arm-runner/Dockerfile

env:
  REGISTRY: ghcr.io/doganulus
  IMAGE_NAME: test-arm-runner
  IMAGE_VERSION: latest
  CONTAINERS_ROOT: /home/runner/.local/share/containers
  TMPDIR: /home/runner/.local/share/containers/tmp

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Build container images
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm]
    runs-on: ${{ matrix.os }}
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.os }}
      cancel-in-progress: true

    steps:
      - name: Install container tools
        run: sudo apt-get install podman buildah jq
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 2048 # Reserve disk space for repository
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          remove-codeql: "true"
          remove-docker-images: "true"
          build-mount-path: ${{ env.CONTAINERS_ROOT }} # The remaining space only for container build
      - run: mkdir -p $TMPDIR

      - name: Get platform tag
        run: |
          platform=$(podman info --format='{{.Version.OsArch}}' | sed 's/\//-/g')
          echo "PLATFORM=${platform}" >> $GITHUB_ENV

      - name: Log in to the GitHub Container registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Build container image
        id: build
        uses: redhat-actions/buildah-build@v2
        with:
          context: ./containers
          image: ${{ env.IMAGE_NAME }}
          # tags: ${{ env.IMAGE_VERSION }} latest
          layers: true
          oci: true
          extra-args: |
            --target test-arm-runner
          containerfiles: |
            ./containers/test-arm-runner/Dockerfile

      - name: Push to GitHub Container Repository
        if: github.ref == 'refs/heads/main'
        id: push-image-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          registry: ${{ env.REGISTRY }}
          image: ${{ steps.build.outputs.image }}
          digestfile: ${{ runner.temp }}/digests/digest-image

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digest-image-${{ env.PLATFORM }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Merge container images
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - run: mkdir -p $TMPDIR
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digest-*
          merge-multiple: true

      - name: Log in to the GitHub Container registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create manifest list and push
        run: |
          buildah manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          for digest in ${{ runner.temp }}/digests; do
            buildah manifest add ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest $(cat $digest)
          done
          buildah manifest push --all ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest 
